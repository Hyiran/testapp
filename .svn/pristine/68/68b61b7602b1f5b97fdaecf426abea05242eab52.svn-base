package com.ctc.mail.timedelay;

import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import com.ctc.mail.common.CommonUtil;
import com.ctc.mail.common.Log;

import org.apache.commons.io.FileUtils;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;

import pers.vinken.appiumUtil.elementManager;
import pers.vinken.appiumUtil.formatUtil;
import pers.vinken.appiumUtil.ioManager;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

/**
 * 163app，测试机型：三星note4
 * @author xiaoM
 *
 */

public class Test163 {
	static String dateFormat = "MM/dd  HH:mm:ss";
	static SimpleDateFormat date = new SimpleDateFormat(dateFormat);
	static String projectRootPath = new File(System.getProperty("user.dir")).getPath().concat("/");// 工程根目录
	String apkDir = projectRootPath + "apk/"; // 安装包的位置
	String apkName = "com.netease.mail.apk"; // 安装包名
	String appPackage = "com.netease.mail"; // 程序的package
	String appActivity = "com.netease.mobimail.activity.LaunchActivity"; // 程序的Activity
	static String fileDir = projectRootPath + "log/"; // 记录文档的储存路径
	static String fileName = "mail163.xls"; // 记录文档的文件名
	String screenshotName = "mail163_test"; // 截图的名字前缀

	public AndroidDriver driver;
	
	String UserName = "maomingtest4@163.com";
	String PassWord = "as123456";
	String UserName2 = "maomingtest@163.com";

	String startime;
	String endtime;
	long logintime = 0;
	long readtime = 0;
	long download = 0;


	@Before
	public void setUp() throws Exception {
		DesiredCapabilities capabilities = new DesiredCapabilities();
		capabilities.setCapability("platformName", "Android");// 你要测试的手机操作系统
		capabilities.setCapability("deviceName", "Android");// 使用的手机类型或模拟器类型，真机时输入Android
		capabilities.setCapability("platformVersion", "6.0");// 手机操作系统版本，可不更改
		capabilities.setCapability("appPackage", appPackage);// 你想运行的Android应用的包名
		capabilities.setCapability("appActivity", appActivity);// 你要启动的Android
		capabilities.setCapability("unicodeKeyboard", true);// 隐藏键盘，以便输入中文
		capabilities.setCapability("resetKeyboard", true);

		driver = new AndroidDriver(new URL("http://127.0.0.1:4723/wd/hub"), capabilities);// 若测试多台手机需为开启多个appium，且修改4725（一台对应一个）
	}

	@After
	public void tearDown() throws Exception {
		driver.quit();
	}

	@Test
	// 在此处进行测试代码编写
	public void test() throws Exception {
		test(driver);	
	}

	public void test(AndroidDriver driver){
		for (int i = 1; i <= 1; i++) {
			try {
				startime = date.format(new Date());
				System.out.println("第" + i + "次测试");
				driver.resetApp();// 重置app
				sleep(5000);
				// 登录
				driver.findElement(By.id("com.netease.mail:id/editor_email")).sendKeys(UserName);
				driver.findElement(By.id("com.netease.mail:id/editor_password")).sendKeys(PassWord);
				WebElement login = driver.findElement(By.id("com.netease.mail:id/button_login"));
				long logintime1 = System.currentTimeMillis();
				login.click();
				elementManager.waitForElement(driver, By.id("com.netease.mail:id/btn_enter_mail"), 30);
				long logintime2 = System.currentTimeMillis();
				logintime = logintime2 - logintime1;
				Log.testTime("登录时延： " + logintime);
				driver.findElement(By.id("com.netease.mail:id/btn_enter_mail")).click();
				elementManager.waitForElement(driver, By.xpath("//android.widget.TextView[contains(@text,'收件箱')]"), 10);
				sleep(10000);// 等待10s邮件载入
				// 打开未读邮件
				List<WebElement> read = driver.findElements(By.id("com.netease.mail:id/mail_list_item_content"));
				long readtime1 = System.currentTimeMillis();
				read.get(0).click();
				waitForElement(driver, By.id("com.netease.mail:id/tv_count"), 10);
				long readtime2 = System.currentTimeMillis();
				readtime = readtime2 - readtime1;
				Log.testTime("打开未读邮件时延： " + readtime);
				//附件下载
				driver.findElement(By.id("com.netease.mail:id/tv_count")).click();
				sleep(1000);
				CommonUtil.adbClickElement("660", "1800");
				waitForElement(driver,By.id("com.netease.mail:id/save"),5).click();
				String path="sdcard/Download/test2M*.rar";
				String fileName = "test2M";
				if(	CommonUtil.adbFindFile(path, fileName)){
					CommonUtil.adbDeleteFile(path);
				}
				sleep(1000);
				WebElement e1 = waitForElement(driver,By.id("com.netease.mail:id/tv_done"),5);
				long time1 = System.currentTimeMillis();
				e1.click();
				CommonUtil.adbwaitforfile(path, fileName, 10000);
				long time2 = System.currentTimeMillis();
				download = time2 - time1;
				Log.testTime("附件下载时延："+download );

				elementManager.checkandClick(driver, By.id("com.netease.mail:id/iv_mail_read_back"));// 返回收件箱列表
				// 删除已打开的未读邮件
				TouchAction action = new TouchAction(driver);
				WebElement el = read.get(0);
				action.longPress(el).perform();
				driver.findElement(By.id("com.netease.mail:id/op_delete")).click();
				// 发送邮件
				driver.findElement(By.id("com.netease.mail:id/iv_mail_list_plus")).click();
				elementManager.checkandClick(driver, By.id("com.netease.mail:id/write_layout"));
				driver.findElement(By.id("com.netease.mail:id/mailcompose_address_input"))
				.sendKeys(UserName2);
				driver.findElement(By.id("com.netease.mail:id/mailcompose_subject_textedit")).sendKeys("test1");
				// 设定正文长度
				String textField = "";
				for (int x = 0; x < 3; x++) {
					textField +="1234567890";
				}
				WebElement body = driver.findElement(By.id("com.netease.mail:id/mailcompose_content"));
				body.clear();
				body.sendKeys(textField);
				elementManager.checkandClick(driver, By.id("com.netease.mail:id/mailcompose_btn_add_attachment"));
				elementManager.waitForElement(driver, By.id("com.netease.mail:id/vertical_file"), 5).click();
				if (elementManager.waitForElement(driver, By.name("0."), 2) != null) {
					elementManager.checkandClick(driver, By.name("0."));
					elementManager.checkandClick(driver, By.name("test2M.rar"));
				} else {
					elementManager.checkandClick(driver, By.name("test2M.rar"));
				}
				WebElement send = driver.findElement(By.id("com.netease.mail:id/tv_done"));
				send.click();// 发送
				CommonUtil.adbentry();// 发送一个广播给辅助工具接收记录时间
				Log.testTime("发送时延,辅助工具有记录");
				sleep(20000);
				endtime = date.format(new Date());
				inputToExcel(i,startime,endtime);
			} catch (Exception e) {
				screenShot(i);
				System.out.println("软件报错，重新启动");
				driver.closeApp();
				driver.launchApp();
				i--;
			}
		}		
	}

	// 用于设置等待时间，不用修改
	public void sleep(long millis) {
		try {
			Thread.sleep(millis);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	// 输入文字到excel表格，不用修改
	public  void inputToExcel(int caseNo,String startime,String endtime) {
		try {
			ioManager.writeToExcelFile(fileDir + fileName, "test163", caseNo + "\t" + startime + "\t" + endtime + "\t" + logintime + "\t" + readtime +"\t"+download+ "\n");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static WebElement waitForElement(AndroidDriver driver, By by, int timeOut) {
		return new WebDriverWait(driver, timeOut).until(new ExpectedCondition<WebElement>() {
			@Override
			public WebElement apply(WebDriver wd) {
				return wd.findElement(by);
			}
		});
	}

	// 屏幕截图
	public  void screenShot(int i) {
		try {
			File screenshot = driver.getScreenshotAs(OutputType.FILE); // 截取当前图片
			FileUtils.copyFile(screenshot, new File(fileDir + screenshotName + " - No." + i
					+ formatUtil.getSystemTime(" - MM.dd-HH.mm.ss") + ".png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
